=begin
#Tebex Checkout API

#The Checkout APIs are designed to allow our creators to use the Tebex Checkout flow and payment acceptance capabilities without the need to set up a Tebex-powered webstore. Using these APIs allows you to create baskets with custom products (as opposed to pre-created products on our webstore platform), and send customers directly to the checkout flow to proceed with payment options.  You must receive prior authorisation before the Checkout API is enabled on your account. Please contact customer support or your account manager to discover if you qualify to use the Checkout API before beginning integration.

The version of the OpenAPI document: 1.0.0
Contact: tebex-integrations@overwolf.com
Generated by: https://openapi-generator.tech
Generator version: 7.5.0

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::BasketsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'BasketsApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::BasketsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of BasketsApi' do
    it 'should create an instance of BasketsApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::BasketsApi)
    end
  end

  # unit tests for add_package
  # Add a package to the basket
  # This adds a package (an object describing the product) to the basket &#x60;{ident}&#x60;. For subscriptions, **only one subscription item may be in a basket at a time**, and it cannot be included with one-time payment items. **This endpoint requires prior approval. Please contact your account manager.**
  # @param ident The basket identifier.
  # @param [Hash] opts the optional parameters
  # @option opts [AddPackageRequest] :add_package_request 
  # @return [Basket]
  describe 'add_package test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for add_sale_to_basket
  # Add a sale to the basket
  # Adds a &#x60;Sale&#x60; to the basket with &#x60;{ident}&#x60;. **Sales cannot be applied to baskets with &#x60;revenue_share&#x60; set.**
  # @param ident The basket identifier.
  # @param [Hash] opts the optional parameters
  # @option opts [Sale] :sale Provide a &#x60;Sale&#x60; as an object to apply it to the basket.
  # @return [Basket]
  describe 'add_sale_to_basket test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_basket
  # Create a basket that can be used to pay for items
  # This will create and return a &#x60;Basket&#x60; that can be paid for by redirecting the user to &#x60;links.checkout&#x60;
  # @param [Hash] opts the optional parameters
  # @option opts [CreateBasketRequest] :create_basket_request Create a basket, returning the full basket object and payment link.
  # @return [Basket]
  describe 'create_basket test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_basket_by_id
  # Fetch a basket by its identifier
  # Gets the basket associated with the provided identifier.
  # @param ident The basket identifier.
  # @param [Hash] opts the optional parameters
  # @return [Basket]
  describe 'get_basket_by_id test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for remove_row_from_basket
  # Remove a row from the basket
  # This will remove the given &#x60;{row.id}&#x60; from the basket &#x60;{ident}&#x60;. The basket must be re-fetched after running to receive updated totals.
  # @param ident The basket identifier.
  # @param row_id The &#x60;id&#x60; of the &#x60;basket.rows&#x60; row to remove.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'remove_row_from_basket test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
