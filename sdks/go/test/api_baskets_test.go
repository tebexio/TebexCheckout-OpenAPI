/*
Tebex Checkout API

Testing BasketsAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package TebexCheckout

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/GIT_USER_ID/GIT_REPO_ID"
)

func Test_TebexCheckout_BasketsAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test BasketsAPIService AddPackage", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var ident string

		resp, httpRes, err := apiClient.BasketsAPI.AddPackage(context.Background(), ident).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test BasketsAPIService AddSaleToBasket", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var ident string

		resp, httpRes, err := apiClient.BasketsAPI.AddSaleToBasket(context.Background(), ident).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test BasketsAPIService CreateBasket", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.BasketsAPI.CreateBasket(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test BasketsAPIService GetBasketById", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var ident string

		resp, httpRes, err := apiClient.BasketsAPI.GetBasketById(context.Background(), ident).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test BasketsAPIService RemoveRowFromBasket", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var ident string
		var rowId int32

		httpRes, err := apiClient.BasketsAPI.RemoveRowFromBasket(context.Background(), ident, rowId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
