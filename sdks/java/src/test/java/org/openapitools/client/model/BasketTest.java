/*
 * Tebex Checkout API
 * The Checkout APIs are designed to allow our creators to use the Tebex Checkout flow and payment acceptance capabilities without the need to set up a Tebex-powered webstore. Using these APIs allows you to create baskets with custom products (as opposed to pre-created products on our webstore platform), and send customers directly to the checkout flow to proceed with payment options.  You must receive prior authorisation before the Checkout API is enabled on your account. Please contact customer support or your account manager to discover if you qualify to use the Checkout API before beginning integration.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: tebex-integrations@overwolf.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Address;
import org.openapitools.client.model.BasketLinks;
import org.openapitools.client.model.BasketRow;
import org.openapitools.client.model.PriceDetails;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Basket
 */
public class BasketTest {
    private final Basket model = new Basket();

    /**
     * Model tests for Basket
     */
    @Test
    public void testBasket() {
        // TODO: test Basket
    }

    /**
     * Test the property 'ident'
     */
    @Test
    public void identTest() {
        // TODO: test ident
    }

    /**
     * Test the property 'expire'
     */
    @Test
    public void expireTest() {
        // TODO: test expire
    }

    /**
     * Test the property 'price'
     */
    @Test
    public void priceTest() {
        // TODO: test price
    }

    /**
     * Test the property 'priceDetails'
     */
    @Test
    public void priceDetailsTest() {
        // TODO: test priceDetails
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'recurringPeriod'
     */
    @Test
    public void recurringPeriodTest() {
        // TODO: test recurringPeriod
    }

    /**
     * Test the property 'recurringNextPaymentDate'
     */
    @Test
    public void recurringNextPaymentDateTest() {
        // TODO: test recurringNextPaymentDate
    }

    /**
     * Test the property 'isPaymentMethodUpdate'
     */
    @Test
    public void isPaymentMethodUpdateTest() {
        // TODO: test isPaymentMethodUpdate
    }

    /**
     * Test the property 'returnUrl'
     */
    @Test
    public void returnUrlTest() {
        // TODO: test returnUrl
    }

    /**
     * Test the property 'complete'
     */
    @Test
    public void completeTest() {
        // TODO: test complete
    }

    /**
     * Test the property 'tax'
     */
    @Test
    public void taxTest() {
        // TODO: test tax
    }

    /**
     * Test the property 'username'
     */
    @Test
    public void usernameTest() {
        // TODO: test username
    }

    /**
     * Test the property 'discounts'
     */
    @Test
    public void discountsTest() {
        // TODO: test discounts
    }

    /**
     * Test the property 'coupons'
     */
    @Test
    public void couponsTest() {
        // TODO: test coupons
    }

    /**
     * Test the property 'giftcards'
     */
    @Test
    public void giftcardsTest() {
        // TODO: test giftcards
    }

    /**
     * Test the property 'address'
     */
    @Test
    public void addressTest() {
        // TODO: test address
    }

    /**
     * Test the property 'rows'
     */
    @Test
    public void rowsTest() {
        // TODO: test rows
    }

    /**
     * Test the property 'fingerprint'
     */
    @Test
    public void fingerprintTest() {
        // TODO: test fingerprint
    }

    /**
     * Test the property 'creatorCode'
     */
    @Test
    public void creatorCodeTest() {
        // TODO: test creatorCode
    }

    /**
     * Test the property 'roundup'
     */
    @Test
    public void roundupTest() {
        // TODO: test roundup
    }

    /**
     * Test the property 'cancelUrl'
     */
    @Test
    public void cancelUrlTest() {
        // TODO: test cancelUrl
    }

    /**
     * Test the property 'completeUrl'
     */
    @Test
    public void completeUrlTest() {
        // TODO: test completeUrl
    }

    /**
     * Test the property 'completeAutoRedirect'
     */
    @Test
    public void completeAutoRedirectTest() {
        // TODO: test completeAutoRedirect
    }

    /**
     * Test the property 'custom'
     */
    @Test
    public void customTest() {
        // TODO: test custom
    }

    /**
     * Test the property 'links'
     */
    @Test
    public void linksTest() {
        // TODO: test links
    }

}
