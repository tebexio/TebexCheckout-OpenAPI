/**
 * Tebex Checkout API
 * The Checkout APIs are designed to allow our creators to use the Tebex Checkout flow and payment acceptance capabilities without the need to set up a Tebex-powered webstore. Using these APIs allows you to create baskets with custom products (as opposed to pre-created products on our webstore platform), and send customers directly to the checkout flow to proceed with payment options.  You must receive prior authorisation before the Checkout API is enabled on your account. Please contact customer support or your account manager to discover if you qualify to use the Checkout API before beginning integration.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: tebex-integrations@overwolf.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/TebexCheckout/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/TebexCheckout/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.TebexCheckoutApi);
  }
}(this, function(expect, TebexCheckoutApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new TebexCheckoutApi.PaymentSubject();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PaymentSubject', function() {
    it('should create an instance of PaymentSubject', function() {
      // uncomment below and update the code to test PaymentSubject
      //var instance = new TebexCheckoutApi.PaymentSubject();
      //expect(instance).to.be.a(TebexCheckoutApi.PaymentSubject);
    });

    it('should have the property transactionId (base name: "transaction_id")', function() {
      // uncomment below and update the code to test the property transactionId
      //var instance = new TebexCheckoutApi.PaymentSubject();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new TebexCheckoutApi.PaymentSubject();
      //expect(instance).to.be();
    });

    it('should have the property paymentSequence (base name: "payment_sequence")', function() {
      // uncomment below and update the code to test the property paymentSequence
      //var instance = new TebexCheckoutApi.PaymentSubject();
      //expect(instance).to.be();
    });

    it('should have the property createdAt (base name: "created_at")', function() {
      // uncomment below and update the code to test the property createdAt
      //var instance = new TebexCheckoutApi.PaymentSubject();
      //expect(instance).to.be();
    });

    it('should have the property price (base name: "price")', function() {
      // uncomment below and update the code to test the property price
      //var instance = new TebexCheckoutApi.PaymentSubject();
      //expect(instance).to.be();
    });

    it('should have the property pricePaid (base name: "price_paid")', function() {
      // uncomment below and update the code to test the property pricePaid
      //var instance = new TebexCheckoutApi.PaymentSubject();
      //expect(instance).to.be();
    });

    it('should have the property paymentMethod (base name: "payment_method")', function() {
      // uncomment below and update the code to test the property paymentMethod
      //var instance = new TebexCheckoutApi.PaymentSubject();
      //expect(instance).to.be();
    });

    it('should have the property fees (base name: "fees")', function() {
      // uncomment below and update the code to test the property fees
      //var instance = new TebexCheckoutApi.PaymentSubject();
      //expect(instance).to.be();
    });

    it('should have the property customer (base name: "customer")', function() {
      // uncomment below and update the code to test the property customer
      //var instance = new TebexCheckoutApi.PaymentSubject();
      //expect(instance).to.be();
    });

    it('should have the property products (base name: "products")', function() {
      // uncomment below and update the code to test the property products
      //var instance = new TebexCheckoutApi.PaymentSubject();
      //expect(instance).to.be();
    });

    it('should have the property coupons (base name: "coupons")', function() {
      // uncomment below and update the code to test the property coupons
      //var instance = new TebexCheckoutApi.PaymentSubject();
      //expect(instance).to.be();
    });

    it('should have the property giftCards (base name: "gift_cards")', function() {
      // uncomment below and update the code to test the property giftCards
      //var instance = new TebexCheckoutApi.PaymentSubject();
      //expect(instance).to.be();
    });

    it('should have the property recurringPaymentReference (base name: "recurring_payment_reference")', function() {
      // uncomment below and update the code to test the property recurringPaymentReference
      //var instance = new TebexCheckoutApi.PaymentSubject();
      //expect(instance).to.be();
    });

    it('should have the property custom (base name: "custom")', function() {
      // uncomment below and update the code to test the property custom
      //var instance = new TebexCheckoutApi.PaymentSubject();
      //expect(instance).to.be();
    });

    it('should have the property revenueShare (base name: "revenue_share")', function() {
      // uncomment below and update the code to test the property revenueShare
      //var instance = new TebexCheckoutApi.PaymentSubject();
      //expect(instance).to.be();
    });

    it('should have the property declineReason (base name: "decline_reason")', function() {
      // uncomment below and update the code to test the property declineReason
      //var instance = new TebexCheckoutApi.PaymentSubject();
      //expect(instance).to.be();
    });

  });

}));
