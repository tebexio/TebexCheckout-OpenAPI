/**
 * Tebex Checkout API
 * The Checkout APIs are designed to allow our creators to use the Tebex Checkout flow and payment acceptance capabilities without the need to set up a Tebex-powered webstore. Using these APIs allows you to create baskets with custom products (as opposed to pre-created products on our webstore platform), and send customers directly to the checkout flow to proceed with payment options.  You must receive prior authorisation before the Checkout API is enabled on your account. Please contact customer support or your account manager to discover if you qualify to use the Checkout API before beginning integration.
 *
 * The version of the OpenAPI document: 1.1.2
 * Contact: tebex-integrations@overwolf.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/TebexCheckout/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/TebexCheckout/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.TebexCheckoutApi);
  }
}(this, function(expect, TebexCheckoutApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new TebexCheckoutApi.Basket();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Basket', function() {
    it('should create an instance of Basket', function() {
      // uncomment below and update the code to test Basket
      //var instance = new TebexCheckoutApi.Basket();
      //expect(instance).to.be.a(TebexCheckoutApi.Basket);
    });

    it('should have the property ident (base name: "ident")', function() {
      // uncomment below and update the code to test the property ident
      //var instance = new TebexCheckoutApi.Basket();
      //expect(instance).to.be();
    });

    it('should have the property expire (base name: "expire")', function() {
      // uncomment below and update the code to test the property expire
      //var instance = new TebexCheckoutApi.Basket();
      //expect(instance).to.be();
    });

    it('should have the property price (base name: "price")', function() {
      // uncomment below and update the code to test the property price
      //var instance = new TebexCheckoutApi.Basket();
      //expect(instance).to.be();
    });

    it('should have the property priceDetails (base name: "priceDetails")', function() {
      // uncomment below and update the code to test the property priceDetails
      //var instance = new TebexCheckoutApi.Basket();
      //expect(instance).to.be();
    });

    it('should have the property isPaymentMethodUpdate (base name: "isPaymentMethodUpdate")', function() {
      // uncomment below and update the code to test the property isPaymentMethodUpdate
      //var instance = new TebexCheckoutApi.Basket();
      //expect(instance).to.be();
    });

    it('should have the property returnUrl (base name: "returnUrl")', function() {
      // uncomment below and update the code to test the property returnUrl
      //var instance = new TebexCheckoutApi.Basket();
      //expect(instance).to.be();
    });

    it('should have the property complete (base name: "complete")', function() {
      // uncomment below and update the code to test the property complete
      //var instance = new TebexCheckoutApi.Basket();
      //expect(instance).to.be();
    });

    it('should have the property tax (base name: "tax")', function() {
      // uncomment below and update the code to test the property tax
      //var instance = new TebexCheckoutApi.Basket();
      //expect(instance).to.be();
    });

    it('should have the property username (base name: "username")', function() {
      // uncomment below and update the code to test the property username
      //var instance = new TebexCheckoutApi.Basket();
      //expect(instance).to.be();
    });

    it('should have the property emailImmutable (base name: "email_immutable")', function() {
      // uncomment below and update the code to test the property emailImmutable
      //var instance = new TebexCheckoutApi.Basket();
      //expect(instance).to.be();
    });

    it('should have the property discounts (base name: "discounts")', function() {
      // uncomment below and update the code to test the property discounts
      //var instance = new TebexCheckoutApi.Basket();
      //expect(instance).to.be();
    });

    it('should have the property coupons (base name: "coupons")', function() {
      // uncomment below and update the code to test the property coupons
      //var instance = new TebexCheckoutApi.Basket();
      //expect(instance).to.be();
    });

    it('should have the property giftcards (base name: "giftcards")', function() {
      // uncomment below and update the code to test the property giftcards
      //var instance = new TebexCheckoutApi.Basket();
      //expect(instance).to.be();
    });

    it('should have the property address (base name: "address")', function() {
      // uncomment below and update the code to test the property address
      //var instance = new TebexCheckoutApi.Basket();
      //expect(instance).to.be();
    });

    it('should have the property rows (base name: "rows")', function() {
      // uncomment below and update the code to test the property rows
      //var instance = new TebexCheckoutApi.Basket();
      //expect(instance).to.be();
    });

    it('should have the property fingerprint (base name: "fingerprint")', function() {
      // uncomment below and update the code to test the property fingerprint
      //var instance = new TebexCheckoutApi.Basket();
      //expect(instance).to.be();
    });

    it('should have the property creatorCode (base name: "creator_code")', function() {
      // uncomment below and update the code to test the property creatorCode
      //var instance = new TebexCheckoutApi.Basket();
      //expect(instance).to.be();
    });

    it('should have the property roundup (base name: "roundup")', function() {
      // uncomment below and update the code to test the property roundup
      //var instance = new TebexCheckoutApi.Basket();
      //expect(instance).to.be();
    });

    it('should have the property cancelUrl (base name: "cancel_url")', function() {
      // uncomment below and update the code to test the property cancelUrl
      //var instance = new TebexCheckoutApi.Basket();
      //expect(instance).to.be();
    });

    it('should have the property completeUrl (base name: "complete_url")', function() {
      // uncomment below and update the code to test the property completeUrl
      //var instance = new TebexCheckoutApi.Basket();
      //expect(instance).to.be();
    });

    it('should have the property completeAutoRedirect (base name: "complete_auto_redirect")', function() {
      // uncomment below and update the code to test the property completeAutoRedirect
      //var instance = new TebexCheckoutApi.Basket();
      //expect(instance).to.be();
    });

    it('should have the property recurringItems (base name: "recurring_items")', function() {
      // uncomment below and update the code to test the property recurringItems
      //var instance = new TebexCheckoutApi.Basket();
      //expect(instance).to.be();
    });

    it('should have the property payment (base name: "payment")', function() {
      // uncomment below and update the code to test the property payment
      //var instance = new TebexCheckoutApi.Basket();
      //expect(instance).to.be();
    });

    it('should have the property custom (base name: "custom")', function() {
      // uncomment below and update the code to test the property custom
      //var instance = new TebexCheckoutApi.Basket();
      //expect(instance).to.be();
    });

    it('should have the property links (base name: "links")', function() {
      // uncomment below and update the code to test the property links
      //var instance = new TebexCheckoutApi.Basket();
      //expect(instance).to.be();
    });

  });

}));
