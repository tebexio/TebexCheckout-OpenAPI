/**
 * Tebex Checkout API
 * The Checkout APIs are designed to allow our creators to use the Tebex Checkout flow and payment acceptance capabilities without the need to set up a Tebex-powered webstore. Using these APIs allows you to create baskets with custom products (as opposed to pre-created products on our webstore platform), and send customers directly to the checkout flow to proceed with payment options.  You must receive prior authorisation before the Checkout API is enabled on your account. Please contact customer support or your account manager to discover if you qualify to use the Checkout API before beginning integration.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: tebex-integrations@overwolf.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/TebexCheckout/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/TebexCheckout/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.TebexCheckoutApi);
  }
}(this, function(expect, TebexCheckoutApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new TebexCheckoutApi.RecurringPaymentLinks();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('RecurringPaymentLinks', function() {
    it('should create an instance of RecurringPaymentLinks', function() {
      // uncomment below and update the code to test RecurringPaymentLinks
      //var instance = new TebexCheckoutApi.RecurringPaymentLinks();
      //expect(instance).to.be.a(TebexCheckoutApi.RecurringPaymentLinks);
    });

    it('should have the property initialPayment (base name: "initial_payment")', function() {
      // uncomment below and update the code to test the property initialPayment
      //var instance = new TebexCheckoutApi.RecurringPaymentLinks();
      //expect(instance).to.be();
    });

    it('should have the property paymentHistory (base name: "payment_history")', function() {
      // uncomment below and update the code to test the property paymentHistory
      //var instance = new TebexCheckoutApi.RecurringPaymentLinks();
      //expect(instance).to.be();
    });

  });

}));
