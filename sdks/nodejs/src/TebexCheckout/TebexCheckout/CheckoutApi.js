/**
 * Tebex Checkout API
 * The Checkout APIs are designed to allow our creators to use the Tebex Checkout flow and payment acceptance capabilities without the need to set up a Tebex-powered webstore. Using these APIs allows you to create baskets with custom products (as opposed to pre-created products on our webstore platform), and send customers directly to the checkout flow to proceed with payment options.  You must receive prior authorisation before the Checkout API is enabled on your account. Please contact customer support or your account manager to discover if you qualify to use the Checkout API before beginning integration.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: tebex-integrations@overwolf.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Basket from '../model/Basket';
import CheckoutRequest from '../model/CheckoutRequest';

/**
* Checkout service.
* @module TebexCheckout/TebexCheckout/CheckoutApi
* @version 1.0.0
*/
export default class CheckoutApi {

    /**
    * Constructs a new CheckoutApi. 
    * @alias module:TebexCheckout/TebexCheckout/CheckoutApi
    * @class
    * @param {module:TebexCheckout/ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:TebexCheckout/ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the checkout operation.
     * @callback module:TebexCheckout/TebexCheckout/CheckoutApi~checkoutCallback
     * @param {String} error Error message, if any.
     * @param {module:TebexCheckout/model/Basket} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a checkout request
     * This API call allows the complete checkout flow (create basket, add items, add sale) to be made in a single API call, for when the Seller is managing the basket locally. **This endpoint requires prior approval - please contact your account manager.**
     * @param {Object} opts Optional parameters
     * @param {module:TebexCheckout/model/CheckoutRequest} [checkoutRequest] Provide a `Basket`, an array of `Packages` to be added to the basket, and an optional `Sale` to complete the full checkout flow in one call. **Only one subscription item may be in the basket at a time.**
     * @param {module:TebexCheckout/TebexCheckout/CheckoutApi~checkoutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:TebexCheckout/model/Basket}
     */
    checkout(opts, callback) {
      opts = opts || {};
      let postBody = opts['checkoutRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Basket;
      return this.apiClient.callApi(
        '/checkout', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
