/**
 * Tebex Checkout API
 * The Checkout APIs are designed to allow our creators to use the Tebex Checkout flow and payment acceptance capabilities without the need to set up a Tebex-powered webstore. Using these APIs allows you to create baskets with custom products (as opposed to pre-created products on our webstore platform), and send customers directly to the checkout flow to proceed with payment options.  You must receive prior authorisation before the Checkout API is enabled on your account. Please contact customer support or your account manager to discover if you qualify to use the Checkout API before beginning integration.
 *
 * The version of the OpenAPI document: 1.1.2
 * Contact: tebex-integrations@overwolf.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Payment from '../model/Payment';

/**
* Payments service.
* @module TebexCheckout/TebexCheckout/PaymentsApi
* @version 1.1.2
*/
export default class PaymentsApi {

    /**
    * Constructs a new PaymentsApi. 
    * @alias module:TebexCheckout/TebexCheckout/PaymentsApi
    * @class
    * @param {module:TebexCheckout/ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:TebexCheckout/ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getPaymentById operation.
     * @callback module:TebexCheckout/TebexCheckout/PaymentsApi~getPaymentByIdCallback
     * @param {String} error Error message, if any.
     * @param {module:TebexCheckout/model/Payment} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Fetch a payment by its transaction ID
     * This will fetch the given payment associated with this transaction id. Single payment transaction IDs begin with `tbx-`
     * @param {String} txnId The payment reference to fetch.
     * @param {module:TebexCheckout/TebexCheckout/PaymentsApi~getPaymentByIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:TebexCheckout/model/Payment}
     */
    getPaymentById(txnId, callback) {
      let postBody = null;
      // verify the required parameter 'txnId' is set
      if (txnId === undefined || txnId === null) {
        throw new Error("Missing the required parameter 'txnId' when calling getPaymentById");
      }

      let pathParams = {
        'txnId': txnId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['tebex_checkout_auth_basic'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Payment;
      return this.apiClient.callApi(
        '/payments/{txnId}?type=txn_id', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the refundPaymentById operation.
     * @callback module:TebexCheckout/TebexCheckout/PaymentsApi~refundPaymentByIdCallback
     * @param {String} error Error message, if any.
     * @param {module:TebexCheckout/model/Payment} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Refund a payment by its transaction ID
     * This will refund the given payment associated with this transaction id.
     * @param {String} txnId The payment reference to refund.
     * @param {module:TebexCheckout/TebexCheckout/PaymentsApi~refundPaymentByIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:TebexCheckout/model/Payment}
     */
    refundPaymentById(txnId, callback) {
      let postBody = null;
      // verify the required parameter 'txnId' is set
      if (txnId === undefined || txnId === null) {
        throw new Error("Missing the required parameter 'txnId' when calling refundPaymentById");
      }

      let pathParams = {
        'txnId': txnId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['tebex_checkout_auth_basic'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Payment;
      return this.apiClient.callApi(
        '/payments/{txnId}/refund?type=txn_id', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
