/*
 * Tebex Checkout API
 *
 * The Checkout APIs are designed to allow our creators to use the Tebex Checkout flow and payment acceptance capabilities without the need to set up a Tebex-powered webstore. Using these APIs allows you to create baskets with custom products (as opposed to pre-created products on our webstore platform), and send customers directly to the checkout flow to proceed with payment options.  You must receive prior authorisation before the Checkout API is enabled on your account. Please contact customer support or your account manager to discover if you qualify to use the Checkout API before beginning integration.
 *
 * The version of the OpenAPI document: 1.1.2
 * Contact: tebex-integrations@overwolf.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using TebexCheckout.Model;
using TebexCheckout.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace TebexCheckout.Test.Model
{
    /// <summary>
    ///  Class for testing BasketRowMeta
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class BasketRowMetaTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for BasketRowMeta
        //private BasketRowMeta instance;

        public BasketRowMetaTests()
        {
            // TODO uncomment below to create an instance of BasketRowMeta
            //instance = new BasketRowMeta();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of BasketRowMeta
        /// </summary>
        [Fact]
        public void BasketRowMetaInstanceTest()
        {
            // TODO uncomment below to test "IsType" BasketRowMeta
            //Assert.IsType<BasketRowMeta>(instance);
        }

        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }

        /// <summary>
        /// Test the property 'Rowprice'
        /// </summary>
        [Fact]
        public void RowpriceTest()
        {
            // TODO unit test for the property 'Rowprice'
        }

        /// <summary>
        /// Test the property 'Initialprice'
        /// </summary>
        [Fact]
        public void InitialpriceTest()
        {
            // TODO unit test for the property 'Initialprice'
        }

        /// <summary>
        /// Test the property 'IsCumulative'
        /// </summary>
        [Fact]
        public void IsCumulativeTest()
        {
            // TODO unit test for the property 'IsCumulative'
        }

        /// <summary>
        /// Test the property 'RequiredPackages'
        /// </summary>
        [Fact]
        public void RequiredPackagesTest()
        {
            // TODO unit test for the property 'RequiredPackages'
        }

        /// <summary>
        /// Test the property 'RequiresAny'
        /// </summary>
        [Fact]
        public void RequiresAnyTest()
        {
            // TODO unit test for the property 'RequiresAny'
        }

        /// <summary>
        /// Test the property 'Category'
        /// </summary>
        [Fact]
        public void CategoryTest()
        {
            // TODO unit test for the property 'Category'
        }

        /// <summary>
        /// Test the property 'ProducesGiftCard'
        /// </summary>
        [Fact]
        public void ProducesGiftCardTest()
        {
            // TODO unit test for the property 'ProducesGiftCard'
        }

        /// <summary>
        /// Test the property 'AllowsGiftCards'
        /// </summary>
        [Fact]
        public void AllowsGiftCardsTest()
        {
            // TODO unit test for the property 'AllowsGiftCards'
        }

        /// <summary>
        /// Test the property 'Servers'
        /// </summary>
        [Fact]
        public void ServersTest()
        {
            // TODO unit test for the property 'Servers'
        }

        /// <summary>
        /// Test the property 'Limits'
        /// </summary>
        [Fact]
        public void LimitsTest()
        {
            // TODO unit test for the property 'Limits'
        }

        /// <summary>
        /// Test the property 'HasDeliverables'
        /// </summary>
        [Fact]
        public void HasDeliverablesTest()
        {
            // TODO unit test for the property 'HasDeliverables'
        }

        /// <summary>
        /// Test the property 'DeliverableTypes'
        /// </summary>
        [Fact]
        public void DeliverableTypesTest()
        {
            // TODO unit test for the property 'DeliverableTypes'
        }

        /// <summary>
        /// Test the property 'DownloadLink'
        /// </summary>
        [Fact]
        public void DownloadLinkTest()
        {
            // TODO unit test for the property 'DownloadLink'
        }

        /// <summary>
        /// Test the property 'HasSellerProtection'
        /// </summary>
        [Fact]
        public void HasSellerProtectionTest()
        {
            // TODO unit test for the property 'HasSellerProtection'
        }

        /// <summary>
        /// Test the property 'ItemType'
        /// </summary>
        [Fact]
        public void ItemTypeTest()
        {
            // TODO unit test for the property 'ItemType'
        }

        /// <summary>
        /// Test the property 'RevenueShare'
        /// </summary>
        [Fact]
        public void RevenueShareTest()
        {
            // TODO unit test for the property 'RevenueShare'
        }

        /// <summary>
        /// Test the property 'Image'
        /// </summary>
        [Fact]
        public void ImageTest()
        {
            // TODO unit test for the property 'Image'
        }

        /// <summary>
        /// Test the property 'Realprice'
        /// </summary>
        [Fact]
        public void RealpriceTest()
        {
            // TODO unit test for the property 'Realprice'
        }
    }
}
