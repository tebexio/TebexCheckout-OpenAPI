/*
 * Tebex Checkout API
 *
 * The Checkout APIs are designed to allow our creators to use the Tebex Checkout flow and payment acceptance capabilities without the need to set up a Tebex-powered webstore. Using these APIs allows you to create baskets with custom products (as opposed to pre-created products on our webstore platform), and send customers directly to the checkout flow to proceed with payment options.  You must receive prior authorisation before the Checkout API is enabled on your account. Please contact customer support or your account manager to discover if you qualify to use the Checkout API before beginning integration.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: tebex-integrations@overwolf.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = TebexCheckout.Client.OpenAPIDateConverter;

namespace TebexCheckout.Model
{
    /// <summary>
    /// PaymentSubject
    /// </summary>
    [DataContract(Name = "PaymentSubject")]
    public partial class PaymentSubject : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PaymentSubject" /> class.
        /// </summary>
        /// <param name="transactionId">transactionId.</param>
        /// <param name="status">status.</param>
        /// <param name="paymentSequence">paymentSequence.</param>
        /// <param name="createdAt">createdAt.</param>
        /// <param name="price">price.</param>
        /// <param name="pricePaid">pricePaid.</param>
        /// <param name="paymentMethod">paymentMethod.</param>
        /// <param name="fees">fees.</param>
        /// <param name="customer">customer.</param>
        /// <param name="products">products.</param>
        /// <param name="coupons">coupons.</param>
        /// <param name="giftCards">giftCards.</param>
        /// <param name="recurringPaymentReference">recurringPaymentReference.</param>
        /// <param name="custom">custom.</param>
        /// <param name="revenueShare">revenueShare.</param>
        /// <param name="declineReason">declineReason.</param>
        public PaymentSubject(string transactionId = default(string), PaymentStatus status = default(PaymentStatus), string paymentSequence = default(string), DateTime createdAt = default(DateTime), PaymentSubjectPrice price = default(PaymentSubjectPrice), PaymentSubjectPrice pricePaid = default(PaymentSubjectPrice), PaymentSubjectPaymentMethod paymentMethod = default(PaymentSubjectPaymentMethod), PaymentSubjectFees fees = default(PaymentSubjectFees), PaymentSubjectCustomer customer = default(PaymentSubjectCustomer), List<PaymentSubjectProductsInner> products = default(List<PaymentSubjectProductsInner>), List<Object> coupons = default(List<Object>), List<Object> giftCards = default(List<Object>), string recurringPaymentReference = default(string), Object custom = default(Object), List<RevenueShare> revenueShare = default(List<RevenueShare>), string declineReason = default(string))
        {
            this.TransactionId = transactionId;
            this.Status = status;
            this.PaymentSequence = paymentSequence;
            this.CreatedAt = createdAt;
            this.Price = price;
            this.PricePaid = pricePaid;
            this.PaymentMethod = paymentMethod;
            this.Fees = fees;
            this.Customer = customer;
            this.Products = products;
            this.Coupons = coupons;
            this.GiftCards = giftCards;
            this.RecurringPaymentReference = recurringPaymentReference;
            this.Custom = custom;
            this.RevenueShare = revenueShare;
            this.DeclineReason = declineReason;
        }

        /// <summary>
        /// Gets or Sets TransactionId
        /// </summary>
        /// <example>tbx-40514024a64636-f9a1ea</example>
        [DataMember(Name = "transaction_id", EmitDefaultValue = false)]
        public string TransactionId { get; set; }

        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [DataMember(Name = "status", EmitDefaultValue = false)]
        public PaymentStatus Status { get; set; }

        /// <summary>
        /// Gets or Sets PaymentSequence
        /// </summary>
        /// <example>recurring</example>
        [DataMember(Name = "payment_sequence", EmitDefaultValue = false)]
        public string PaymentSequence { get; set; }

        /// <summary>
        /// Gets or Sets CreatedAt
        /// </summary>
        /// <example>2024-05-20T17:57:16Z</example>
        [DataMember(Name = "created_at", EmitDefaultValue = false)]
        public DateTime CreatedAt { get; set; }

        /// <summary>
        /// Gets or Sets Price
        /// </summary>
        [DataMember(Name = "price", EmitDefaultValue = false)]
        public PaymentSubjectPrice Price { get; set; }

        /// <summary>
        /// Gets or Sets PricePaid
        /// </summary>
        [DataMember(Name = "price_paid", EmitDefaultValue = false)]
        public PaymentSubjectPrice PricePaid { get; set; }

        /// <summary>
        /// Gets or Sets PaymentMethod
        /// </summary>
        [DataMember(Name = "payment_method", EmitDefaultValue = false)]
        public PaymentSubjectPaymentMethod PaymentMethod { get; set; }

        /// <summary>
        /// Gets or Sets Fees
        /// </summary>
        [DataMember(Name = "fees", EmitDefaultValue = false)]
        public PaymentSubjectFees Fees { get; set; }

        /// <summary>
        /// Gets or Sets Customer
        /// </summary>
        [DataMember(Name = "customer", EmitDefaultValue = false)]
        public PaymentSubjectCustomer Customer { get; set; }

        /// <summary>
        /// Gets or Sets Products
        /// </summary>
        [DataMember(Name = "products", EmitDefaultValue = false)]
        public List<PaymentSubjectProductsInner> Products { get; set; }

        /// <summary>
        /// Gets or Sets Coupons
        /// </summary>
        [DataMember(Name = "coupons", EmitDefaultValue = false)]
        public List<Object> Coupons { get; set; }

        /// <summary>
        /// Gets or Sets GiftCards
        /// </summary>
        [DataMember(Name = "gift_cards", EmitDefaultValue = false)]
        public List<Object> GiftCards { get; set; }

        /// <summary>
        /// Gets or Sets RecurringPaymentReference
        /// </summary>
        /// <example>tbx-r-713419703</example>
        [DataMember(Name = "recurring_payment_reference", EmitDefaultValue = false)]
        public string RecurringPaymentReference { get; set; }

        /// <summary>
        /// Gets or Sets Custom
        /// </summary>
        [DataMember(Name = "custom", EmitDefaultValue = false)]
        public Object Custom { get; set; }

        /// <summary>
        /// Gets or Sets RevenueShare
        /// </summary>
        [DataMember(Name = "revenue_share", EmitDefaultValue = false)]
        public List<RevenueShare> RevenueShare { get; set; }

        /// <summary>
        /// Gets or Sets DeclineReason
        /// </summary>
        [DataMember(Name = "decline_reason", EmitDefaultValue = true)]
        public string DeclineReason { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class PaymentSubject {\n");
            sb.Append("  TransactionId: ").Append(TransactionId).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  PaymentSequence: ").Append(PaymentSequence).Append("\n");
            sb.Append("  CreatedAt: ").Append(CreatedAt).Append("\n");
            sb.Append("  Price: ").Append(Price).Append("\n");
            sb.Append("  PricePaid: ").Append(PricePaid).Append("\n");
            sb.Append("  PaymentMethod: ").Append(PaymentMethod).Append("\n");
            sb.Append("  Fees: ").Append(Fees).Append("\n");
            sb.Append("  Customer: ").Append(Customer).Append("\n");
            sb.Append("  Products: ").Append(Products).Append("\n");
            sb.Append("  Coupons: ").Append(Coupons).Append("\n");
            sb.Append("  GiftCards: ").Append(GiftCards).Append("\n");
            sb.Append("  RecurringPaymentReference: ").Append(RecurringPaymentReference).Append("\n");
            sb.Append("  Custom: ").Append(Custom).Append("\n");
            sb.Append("  RevenueShare: ").Append(RevenueShare).Append("\n");
            sb.Append("  DeclineReason: ").Append(DeclineReason).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
