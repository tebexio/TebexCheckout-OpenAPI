# coding: utf-8

"""
    Tebex Checkout API

    The Checkout APIs are designed to allow our creators to use the Tebex Checkout flow and payment acceptance capabilities without the need to set up a Tebex-powered webstore. Using these APIs allows you to create baskets with custom products (as opposed to pre-created products on our webstore platform), and send customers directly to the checkout flow to proceed with payment options.  You must receive prior authorisation before the Checkout API is enabled on your account. Please contact customer support or your account manager to discover if you qualify to use the Checkout API before beginning integration.

    The version of the OpenAPI document: 1.1.2
    Contact: tebex-integrations@overwolf.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from TebexCheckout.baskets_api import BasketsApi


class TestBasketsApi(unittest.TestCase):
    """BasketsApi unit test stubs"""

    def setUp(self) -> None:
        self.api = BasketsApi()

    def tearDown(self) -> None:
        pass

    def test_add_package(self) -> None:
        """Test case for add_package

        Add a package to the basket
        """
        pass

    def test_add_sale_to_basket(self) -> None:
        """Test case for add_sale_to_basket

        Add a sale to the basket
        """
        pass

    def test_create_basket(self) -> None:
        """Test case for create_basket

        Create a basket that can be used to pay for items
        """
        pass

    def test_get_basket_by_id(self) -> None:
        """Test case for get_basket_by_id

        Fetch a basket by its identifier
        """
        pass

    def test_remove_row_from_basket(self) -> None:
        """Test case for remove_row_from_basket

        Remove a row from the basket
        """
        pass


if __name__ == '__main__':
    unittest.main()
